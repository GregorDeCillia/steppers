{"name":"Steppers","tagline":"Linear mustistep methods implemented with `boost::numeric::ublas::vector`","body":"this is just a collection of classes to solve ordinary differential equation. The main idea of this project is to get predictor corrector methods where the elements\r\n\r\n* initializing stepper\r\n* predicor and\r\n* corrector\r\n\r\ncan be changed during runtime.\r\n\r\nThe library comes as header only and uses the `ublas` vector library for storing spacial variables (n dimensional states) since these methods provide a vector space algebra. For performance reasons, these vector implementation will eventually be replaced by `boost::arrays` since this data type also runs out of bound checks.\r\n\r\nThe next big step for this project will be to include the nordieck solver, a routine also known as vode ( *v*ariable *o*rder *ODE* solver ). This will make it possible to change the step size during integration which is very difficult for conventional multistep methods.\r\n\r\nAlso, implicit methods might follow","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}